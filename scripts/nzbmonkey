#!/usr/bin/env python

import os
import re
import sys
import shelve
import optparse
import ConfigParser

import nzbmonkey

class Commands(object):

    def __init__(self, loader):
        self._loader = loader

    def do(self, name, args):
        if hasattr(self, name):
            getattr(self, name)(*args)

    def catchup(self, delta = 400000):
        for group in self._loader.groups:
            loader.catchup(group, int(delta))

    def listgroups(self, pattern):
        (response, descs) = self._server.descriptions(pattern)
        for name, title in descs:
            print "%s - %s" % (name, title)

    def download(self, group, filename, delta = 1000):
        # select group
        resp, count, first, last, name = self._loader.server.group(group)

        s = shelve.open(filename)
        start_aid = int(last) - int(delta)
        # get last fetched aid from pickle or use a default
        print "xover group: %s start: %s end: %s delta: %s" % (
            group,
            start_aid,
            last,
            int(last) - int(start_aid),
        )
        # get article range
        (resp, msgs) = self._loader.server.xover(str(start_aid), last)

        # only use nzb posts via naive pattern match
        for (aid, subject, poster, date, mid, references, size, lines) in msgs:
            s[aid] = dict(
                aid = aid,
                subject = subject,
                poster = poster,
                date = date,
                mid = mid,
                references = references,
                size = size,
                lines = lines,
                group = group,
            )

        s.close()

    def make_nzbs(self, filename, dest_dir):
        store = shelve.open(filename)

        index = nzbmonkey.process(store.values())
        good = nzbmonkey.NZBIndex()

        for nzb in index:
            try:
                nzb.verify()
                good.append(nzb)
            except (nzbmonkey.NZBVerificationException), e:
                sys.stderr.write(str(e) + "\n")

        del index

        for nzb in good:
            print nzb.name

        for nzb in good:
            with file("%s/%s.nzb" % (dest_dir, nzb.name), "w") as fp:
                print "writing %s" % (fp.name)
                fp.write(nzb.xml())



if __name__ == "__main__":
    optparser = optparse.OptionParser()

    optparser.add_option(
        "-c",
        "--config",
        type = "string",
        action = "append",
        default = [],
    )

    (options, args) = optparser.parse_args()

    if not options.config:
        options.config =  ["/etc/nzbmonkey.conf", "~/.nzbmonkey.conf"]

    config = ConfigParser.ConfigParser()
    config.read([os.path.expanduser(x) for x in options.config])

    try:
        loader = nzbmonkey.Loader(
            host = config.get("nzbmonkey", "host"),
            port = config.get("nzbmonkey", "port"),
            user = config.get("nzbmonkey", "user"),
            password = config.get("nzbmonkey", "password"),
            state = config.get("nzbmonkey", "state"),
            groups = re.split("\s+", config.get("nzbmonkey", "groups")),
        )
    except (ConfigParser.NoSectionError, ConfigParser.NoOptionError), e:
        sys.stderr.write("A mandatory config option is missing: %s\n" % e.message)
        sys.exit(1)

    commands = Commands(loader)

    command = "catchup"

    try:
        command = args.pop(0)
    except IndexError:
        pass

    commands.do(command, args)
